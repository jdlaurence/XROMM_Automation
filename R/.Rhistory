usethis::use_vignette("xrommRtools-vignette")
?system.file
system.file("extdata","rbt.csv", package = "xrommRtools")
import_rbt(system.file("extdata/rbt.csv", package = "xrommRtools")
)
browseVignettes()
install()
devtools::install()
library(xrommToolsR)
system.file("extdata","rbt.csv", package = "xrommRtools")
system.file("inst",extdata","rbt.csv", package = "xrommRtools")
system.file("inst","extdata","rbt.csv", package = "xrommRtools")
system.file("extdata","rbt.csv", package = "xrommRtools")
devtools::system.file("extdata","rbt.csv", package = "xrommRtools")
system.file(package = "xrommRtools")
system.file(package = "xrommToolsR")
test <- import_rbt(filename = "inst/extdata/rbt.csv")
dim(test)
test_a <- test[,,,1]
test_b <- test[,,,2]
dim(test_a)
library(abind)
abind(test_a, test_b, along = 4)
dim(abind(test_a, test_b, along = 4)
)
test_c <-list(test_a, test_b)
test_c
dim(abind(test_c, along = 4)
)
library(xrommToolsR)
# Note-- Generally here I would check for all of the contents of my project directory, but since for the tutorial they are all internal to the package, there's no need.
# Uncomment if checking your own files
# dir()
xyzpoints <- import_xyz_points(system.file("extdata", "3dpts.csv", package = "xrommToolsR"))
xyzpoints
xyzpoints[1,,]
xyzpoints[1,1,]
rbnames <- ("Mandible", "Cranium")
rbnames <- c("Mandible", "Cranium")
paste0(rbnames, "_acs_tm.csv")
# this is the order of rbts in the internal rbt.csv file
rbnames <- c("Mandible", "Cranium")
mandible_idx <- which(rbnames == "Mandible")  # Will equal 1, mandible rbt is first in rbt.csv
cranium_idx <- which(rbnames == "Cranium")   # Will equal 2, cranium rbt is second in rbt.csv
n_rbs <- length(rbnames)  # for initializing outputs later on
# Note: The system.file call is to retrieve the csv contained within the package
rbts <- import_rbt(system.file("extdata","rbt.csv", package = "xrommToolsR"))
xyzpoints <- import_xyz_points(system.file("extdata", "3dpts.csv", package = "xrommToolsR"))
library(abind)
# We have named our ACS CSV files as [rbname]_acs_tm.csv, so the list of
# relevant filenames can be built this way:
my_acs_list <- paste0(rbnames, "_acs_tm.csv")
# Some weirdness to access each file contained within the package individually... with your own data you can skip these lines
my_acs_list <- list(
system.file("extdata", my_acs_list[1], package = "xrommToolsR"),
system.file("extdata", my_acs_list[2], package = "xrommToolsR"))
# All you'd have to do is this:
acs_list <- lapply(my_acs_list, import_acs_rel_bone)  # Makes a list of matrices
acs_tms <- abind(acs_list, along = 3) # Binds those matrices along a 3rd dimension
# Mandible ACS position in 4x4 transformation matrix format,
# relative to the bone:
acs_tms[,,mandible_idx]
# Note for R users: There are other ways to do this than using a for-loop.
# I am using a loop here (and going forward) just for ease of intuition.
new_rbt_list <- vector(mode = "list", length = n_rbs)
for (rb in c(1:n_rbs)){
tmp_rbt <- rbts[,,,rb]
tmp_acs_tm <- acs_tms[,,rb]
new_rbt_list[[rb]] <- apply_acs_tm(tmp_rbt, tmp_acs_tm)
}
# Then we bind the list into a nice 4-D array
new_rbts <- abind(new_rbt_list, along = 4)
new_rbts
new_xyzpoints_list <- vector(mode = "list", length = n_rbs)
for (rb in c(1:n_rbs)){
tmp_pts <- calculate_relative_motion(new_rbts[,,,rb],
xyzpoints)
new_xyzpoints_list[[rb]] <- tmp_pts
}
new_xyzpoints <- abind(new_xyzpoints_list, along = 4)
new_mandible_rbt <- new_rbts[,,,mandible_idx]
new_cranium_rbt <- new_rbts[,,,cranium_idx]
jcs_tm <- calculate_relative_motion(new_cranium_rbt, new_mandible_rbt)
jcs_tm
# Convert to Tait-Bryan angles and translations, the JCS standard
jcs_data <- convert_tm_to_jcs(jcs_tm)
?convert_tm_to_jcs
??convert_tm_to_jcs
debugonce(convert_tm_to_jcs)
jcs_data <- convert_tm_to_jcs(jcs_tm)
devtools::install()
library(xrommToolsR)
jcs_data <- convert_tm_to_jcs(jcs_tm)
getwd()
file.copy(system.file("extdata", "3dpts.csv", package = "xrommToolsR"),
"../../../xromm-batch-testing/3dpts_trial01.csv")
system.file("extdata", ".csv", package = "xrommToolsR")
system.file("extdata", "*.csv", package = "xrommToolsR")
grep("rbt_",list.files("../../../xromm-batch-testing/"))
list.files("../../../xromm-batch-testing/"))
list.files("../../../xromm-batch-testing/")
# Replace the second argument in each of these with your desired output filepath
file.copy(system.file("extdata", "3dpts.csv", package = "xrommToolsR"),
"../../../xromm-batch-testing/3dpts_trial01.csv")
file.copy(system.file("extdata", "3dpts.csv", package = "xrommToolsR"),
"../../../xromm-batch-testing/3dpts_trial02.csv")
file.copy(system.file("extdata", "rbt.csv", package = "xrommToolsR"),
"../../../xromm-batch-testing/rbt_trial01.csv")
file.copy(system.file("extdata", "rbt.csv", package = "xrommToolsR"),
"../../../xromm-batch-testing/rbt_trial02.csv")
file.copy(system.file("extdata", "rbt.csv", package = "xrommToolsR"),
)
list.files("../../../xromm-batch-testing/"))
list.files("../../../xromm-batch-testing/")
list.files("../../xromm-batch-testing/")
grep("rbt_", list.files("../../xromm-batch-testing/"))
grep("rbt_",list.files("../../xromm-batch-testing/"), value = TRUE)
list.files()
vignette(xrommToolsR)
browseVignettes("xrommToolsR")
browseVignettes(xrommToolsR)
browseVignettes(package = "xrommToolsR")
devtools::install()
browseVignettes(package = "xrommToolsR")
vignettes(package = "xrommToolsR")
vignette(package = "xrommToolsR")
browseVignettes()
devtools::load_all()
vignette()
devtools::build_vignettes()
vignette()
vignette(package = "xrommToolsR")
devtools::load_all()
vignette(package = "xrommToolsR")
vignette(xrommToolsR)
devtools::build()
.Last.error.trace
devtools::build_vignettes()
.Last.error.trace
